name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

defaults:
  run:
    shell: bash --noprofile --norc -CeEuxo pipefail {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  tidy:
    uses: taiki-e/github-actions/.github/workflows/tidy.yml@main
    permissions:
      contents: read
      pull-requests: write # for gh pr edit --add-assignee
      repository-projects: read # for gh pr edit --add-assignee
    secrets: inherit

  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2022
          - windows-2025
          - windows-11-arm
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
      - uses: taiki-e/checkout-action@v1
      - run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser
          Invoke-RestMethod -Uri https://get.scoop.sh | Invoke-Expression
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $env:GITHUB_PATH
          scoop --version
          scoop bucket add taiki-e https://github.com/taiki-e/scoop-bucket
        shell: powershell
      - id: prepare
        run: |
          rm -- ~/scoop/buckets/taiki-e/bucket/*.json
          cp -- bucket/*.json ~/scoop/buckets/taiki-e/bucket
          buckets=()
          for bucket in bucket/*.json; do
            name="${bucket##*/}"
            buckets+=("${name%.*}")
          done
          IFS=' '
          printf '%s\n' "buckets=${buckets[*]}" >>"${GITHUB_OUTPUT}"
      - run: |
          $buckets = "${{ steps.prepare.outputs.buckets }}" -split " "
          foreach ($bucket in $buckets) {
            scoop install $bucket
            if ($bucket -like "cargo-*") {
              $subcmd = $bucket -replace "cargo-",""
              cargo $subcmd --version
            } else {
              & $bucket --version
            }
          }
          foreach ($bucket in $buckets) {
            scoop uninstall $bucket
          }
        shell: powershell
